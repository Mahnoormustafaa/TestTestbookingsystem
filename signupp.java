/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hp
 */
package testbookingsystem;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;



import javax.swing.JOptionPane;
public class signupp extends javax.swing.JFrame {

    /**
     * Creates new form signupp
     */
    public signupp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NAME = new javax.swing.JLabel();
        SNAME = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SEMAIL = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SPASSWARD1 = new javax.swing.JPasswordField();
        SIGNUP = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        SCONPASSWORD = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        NAME.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        NAME.setForeground(new java.awt.Color(51, 51, 51));
        NAME.setText("Full name");

        SNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNAMEActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Email");

        SEMAIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEMAILActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Password");

        SPASSWARD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPASSWARD1ActionPerformed(evt);
            }
        });

        SIGNUP.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SIGNUP.setForeground(new java.awt.Color(51, 51, 51));
        SIGNUP.setText("Signup");
        SIGNUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGNUPActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Confirm password ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(140, 140, 140))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(NAME)
                                .addGap(128, 128, 128))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(125, 125, 125))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SEMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SPASSWARD1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SCONPASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(SIGNUP)
                        .addGap(123, 123, 123))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(NAME)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SEMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(SPASSWARD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SCONPASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(SIGNUP, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SIGNUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGNUPActionPerformed
  
                                            
    String username = SNAME.getText();
    String password = SPASSWARD1.getText();
    String confirmPassword = SCONPASSWORD.getText();
    String email = SEMAIL.getText();  // Get the email from the text field
    String emailPattern = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$"; // Email pattern
    String namePattern = "^[a-zA-Z]+$"; // Name pattern: Alphabets only
    String passwordPattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"; // Password pattern

    // Validate username
    if (username.equals("")) {
        JOptionPane.showMessageDialog(null, "Please fill out your username.");
    } else if (!Character.isUpperCase(username.charAt(0))) {
        JOptionPane.showMessageDialog(null, "Username must start with an uppercase letter.");
    } else if (!username.matches("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]+$")) {
        JOptionPane.showMessageDialog(null, "Username must include both alphabets and numeric characters.");
    } else if (username.length() > 100) {
        JOptionPane.showMessageDialog(null, "Username cannot exceed 100 characters.");
    }

    // Validate password
    else if (password.equals("")) {
        JOptionPane.showMessageDialog(null, "Please fill in your password.");
    } else if (!password.matches(passwordPattern)) {
        JOptionPane.showMessageDialog(null, "Password must include at least 8 characters with uppercase, lowercase, numeric, and special characters.");
    }

    // Validate confirm password
    else if (confirmPassword.equals("")) {
        JOptionPane.showMessageDialog(null, "Please confirm your password.");
    } else if (!password.equals(confirmPassword)) {
        JOptionPane.showMessageDialog(null, "Password and Confirm Password do not match.");
    }

    // Validate email
    else if (email.equals("")) {
        JOptionPane.showMessageDialog(null, "Please fill in your email.");
    } else if (!email.matches(emailPattern)) {
        JOptionPane.showMessageDialog(null, "Invalid email address. Please enter a valid email.");
    }

    // All validations passed
   


        /*   String username = SNAME.getText();
String password = SPASSWARD1.getText();
String confirmPassword = SCONPASSWORD.getText();
String email = SEMAIL.getText();  // Get the email from the text field
String emailPattern = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$"; // Email pattern

// Validate username
if (username.equals("")) {
    JOptionPane.showMessageDialog(null, "Please fill out your name.");
} else if (!Character.isUpperCase(username.charAt(0))) {
    JOptionPane.showMessageDialog(null, "Username must start with an uppercase letter.");
} else if (!username.matches("(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]+")) {
    JOptionPane.showMessageDialog(null, "Username must contain a combination of letters and digits.");
} else if (username.length() > 100) {
    JOptionPane.showMessageDialog(null, "Username cannot exceed 100 characters.");
} 


// Validate password
else if (password.equals("")) {
    JOptionPane.showMessageDialog(null, "Please fill in your password.");
} else if (password.length() < 8) {
    JOptionPane.showMessageDialog(null, "Password must be at least 8 characters long.");
}

// Validate confirm password
else if (!password.equals(confirmPassword)) {
    JOptionPane.showMessageDialog(null, "Password and Confirm Password do not match.");
} 
// Validate email
else if (email.equals("")) {
    JOptionPane.showMessageDialog(null, "Please fill in your email.");
} else if (!email.matches(emailPattern)) {
    JOptionPane.showMessageDialog(null, "Invalid email address. Please enter a valid email.");
} 
*/
// If all validations are passed
/*else {
    // Insert data into the database
    try (Connection conn = DatabaseConnection.getConnection()) {
        // Check if the connection was established
        if (conn == null) {
            JOptionPane.showMessageDialog(null, "Database connection failed.");
            return;
        }
        */
  else {
            // Insert data into the database
            // **Get connection using Singleton**
            try (Connection conn = DatabaseConnection.getInstance().getConnection()) { // Use Singleton to get connection
                // Check if the connection was established
                if (conn == null) {
                    JOptionPane.showMessageDialog(null, "Database connection failed.");
                    return;
                }
        String query = "INSERT INTO Signup (username, email, password) VALUES (?, ?, ?)";
        
        // Using PreparedStatement for secure data handling
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, username);
            pstmt.setString(2, email);
            pstmt.setString(3, password);

            int rowsAffected = pstmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Sign-up successful! User information saved.");
                welcome frame = new welcome();
frame.setLocationRelativeTo(null); // Centers the frame on the screen
frame.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Sign-up failed. Please try again.");
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
        e.printStackTrace();
    }
}

    }//GEN-LAST:event_SIGNUPActionPerformed

    private void SEMAILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEMAILActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SEMAILActionPerformed

    private void SPASSWARD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPASSWARD1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SPASSWARD1ActionPerformed

    private void SNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SNAMEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signupp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signupp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signupp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signupp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new signupp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NAME;
    private javax.swing.JPasswordField SCONPASSWORD;
    private javax.swing.JTextField SEMAIL;
    private javax.swing.JButton SIGNUP;
    private javax.swing.JTextField SNAME;
    private javax.swing.JPasswordField SPASSWARD1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
